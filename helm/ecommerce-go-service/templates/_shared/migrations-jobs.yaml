{{- /* templates/migrations-jobs.yaml */ -}}
{{- $fullname := include "template.fullname" . -}}
{{- $secretName := default "mongo-url" .Values.global.mongo.secretName -}}

{{- range $name, $svc := .Values }}
  {{- if eq $name "global" -}}
    {{- continue -}}
  {{- end -}}

  {{- $image := dig "migrator" "image" "" $svc -}}
  {{- if not $image -}}
    {{- continue -}}
  {{- end -}}

  {{- $db := (dig "mongo" "db" "" $svc) | required (printf "%s.mongo.db is required" $name) -}}
  {{- $hookWeight := default -5 (dig "migrator" "hookWeight" nil $svc) -}}
  {{- $backoff := default 1 (dig "migrator" "backoffLimit" nil $svc) -}}
  {{- $pullPolicy := default "IfNotPresent" (dig "migrator" "imagePullPolicy" nil $svc) -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s-migrate-%d" $fullname $name $.Release.Revision | trunc 63 | trimSuffix "-" }}
  labels:
{{ include "template.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "{{ $hookWeight }}"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  backoffLimit: {{ $backoff }}
  template:
    metadata:
      labels:
{{ include "template.labels" $ | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: migrate
          image: {{ $image | quote }}
          imagePullPolicy: {{ $pullPolicy }}
          command: ["/bin/sh","-c"]
          args:
            - >
              migrate -path=/migrations
              -database "mongodb://${MONGO_HOST}/${MONGO_DB}?${MONGO_PARAMS}"
              up
          env:
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: host
            - name: MONGO_PARAMS
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: params
            - name: MONGO_DB
              value: {{ $db | quote }}

---
{{- end }}
