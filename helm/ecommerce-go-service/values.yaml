global:
  autoscaling:
    enabled: false
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8080
  serviceAccount:
    create: false
  livenessProbe:
    httpGet:
      path: /health/live
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 2
  readinessProbe:
    httpGet:
      path: /health/ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
  configSuffix: "-config"

  config:
    env: "dev"
  #   mongo:
  #     host: "mongo"
  #     password: "pass"
  #   kafka:
  #     brokers: "kafka:29092"
  #   otel-collector-endpoint: "otelcol.observability.svc:4317"

ecommerce-product-service:
  image:
    repository: sokol111/ecommerce-product-service
    tag: "0.0.14"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    host: ecommerce-product-service.localhost
    annotations: {}
  serviceAccount:
    create: false

ecommerce-category-service:
  image:
    repository: sokol111/ecommerce-category-service
    tag: "0.0.14"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    host: ecommerce-category-service.localhost
    annotations: {}
  serviceAccount:
    create: false

ecommerce-product-query-service:
  image:
    repository: sokol111/ecommerce-product-query-service
    tag: "0.0.7"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    host: ecommerce-product-query-service.localhost
    annotations: {}
  serviceAccount:
    create: false

ecommerce-category-query-service:
  image:
    repository: sokol111/ecommerce-category-query-service
    tag: "0.0.9"
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    host: ecommerce-category-query-service.localhost
    annotations: {}
  serviceAccount:
    create: false